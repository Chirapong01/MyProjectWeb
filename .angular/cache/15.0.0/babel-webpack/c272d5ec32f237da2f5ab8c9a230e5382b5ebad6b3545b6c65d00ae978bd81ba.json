{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./../../services/call-api.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ngx-pagination\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@angular/material/radio\";\nimport * as i8 from \"@angular/material/tabs\";\nimport * as i9 from \"ng2-search-filter\";\nfunction ManagerDashboardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"mat-spinner\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManagerDashboardComponent_div_1_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtext(1, \"0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManagerDashboardComponent_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.income);\n  }\n}\nfunction ManagerDashboardComponent_div_1_mat_radio_button_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 54);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const choose_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", choose_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", choose_r7, \"\");\n  }\n}\nfunction ManagerDashboardComponent_div_1_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55)(1, \"div\", 56)(2, \"div\", 57);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 58)(7, \"div\", 59);\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10, \" sold\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const list_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", list_r8.productName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", list_r8.price, \" .-\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", list_r8.amount, \" \");\n  }\n}\nfunction ManagerDashboardComponent_div_1_mat_tab_92_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"div\", 68);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"div\", 28);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"div\", 69);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"div\", 69);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r12 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r12.productName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r12.amount);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r12.price);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i_r12.totalPrice);\n  }\n}\nfunction ManagerDashboardComponent_div_1_mat_tab_92_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab\", 60)(1, \"table\", 61)(2, \"thead\", 62)(3, \"tr\")(4, \"th\", 63);\n    i0.ɵɵtext(5, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E2A\\u0E34\\u0E19\\u0E04\\u0E49\\u0E32\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 64);\n    i0.ɵɵtext(7, \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E17\\u0E35\\u0E48\\u0E02\\u0E32\\u0E22\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 64);\n    i0.ɵɵtext(9, \"\\u0E23\\u0E32\\u0E04\\u0E32\\u0E15\\u0E48\\u0E2D\\u0E0A\\u0E34\\u0E49\\u0E19\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 64);\n    i0.ɵɵtext(11, \"\\u0E23\\u0E32\\u0E04\\u0E32\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, ManagerDashboardComponent_div_1_mat_tab_92_tr_13_Template, 13, 4, \"tr\", 65);\n    i0.ɵɵpipe(14, \"paginate\");\n    i0.ɵɵpipe(15, \"filter\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 66)(17, \"pagination-controls\", 67);\n    i0.ɵɵlistener(\"pageChange\", function ManagerDashboardComponent_div_1_mat_tab_92_Template_pagination_controls_pageChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onPageChange($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r9 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"label\", tab_r9);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(14, 2, i0.ɵɵpipeBind2(15, 5, ctx_r6.dataProduct, ctx_r6.searchText || ctx_r6.filterType), ctx_r6.config));\n  }\n}\nfunction ManagerDashboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4)(2, \"h1\", 5);\n    i0.ɵɵtext(3, \"Dashboard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7)(6, \"div\", 8)(7, \"div\", 9)(8, \"div\", 10)(9, \"div\", 11)(10, \"div\", 12);\n    i0.ɵɵtemplate(11, ManagerDashboardComponent_div_1_div_11_Template, 2, 0, \"div\", 13);\n    i0.ɵɵtemplate(12, ManagerDashboardComponent_div_1_div_12_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\", 15);\n    i0.ɵɵtext(14, \"paid\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 16)(16, \"div\", 17);\n    i0.ɵɵtext(17, \"\\u0E23\\u0E32\\u0E22\\u0E23\\u0E31\\u0E1A\\u0E27\\u0E31\\u0E19\\u0E19\\u0E35\\u0E49\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 18)(20, \"div\", 10)(21, \"div\", 11)(22, \"div\", 12)(23, \"div\", 19);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"span\", 15);\n    i0.ɵɵtext(26, \"paid\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"div\", 16)(28, \"div\", 17);\n    i0.ɵɵtext(29, \"\\u0E15\\u0E49\\u0E19\\u0E17\\u0E38\\u0E19\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(30, \"div\", 8)(31, \"div\", 20)(32, \"div\", 10)(33, \"div\", 11)(34, \"div\", 12)(35, \"div\", 21);\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"span\", 15);\n    i0.ɵɵtext(38, \"paid\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(39, \"div\", 16)(40, \"div\", 22);\n    i0.ɵɵtext(41, \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E27\\u0E31\\u0E19\\u0E19\\u0E35\\u0E49\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(42, \"div\", 8)(43, \"div\", 23)(44, \"div\", 10)(45, \"div\", 11)(46, \"div\", 12)(47, \"div\", 21);\n    i0.ɵɵtext(48);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"span\", 15);\n    i0.ɵɵtext(50, \"paid\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(51, \"div\", 16)(52, \"div\", 22);\n    i0.ɵɵtext(53, \"\\u0E22\\u0E2D\\u0E14\\u0E04\\u0E33\\u0E2A\\u0E31\\u0E48\\u0E07\\u0E0B\\u0E37\\u0E49\\u0E2D\\u0E1B\\u0E23\\u0E30\\u0E08\\u0E33\\u0E27\\u0E31\\u0E19\");\n    i0.ɵɵelementEnd()()()()()()();\n    i0.ɵɵelementStart(54, \"div\", 24)(55, \"div\", 25)(56, \"div\", 26)(57, \"div\", 6)(58, \"div\", 25)(59, \"h1\", 27);\n    i0.ɵɵtext(60, \"\\u0E1B\\u0E23\\u0E30\\u0E27\\u0E31\\u0E15\\u0E34\\u0E01\\u0E32\\u0E23\\u0E02\\u0E32\\u0E22\\u0E2A\\u0E34\\u0E19\\u0E04\\u0E49\\u0E32\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(61, \"div\", 25)(62, \"div\", 28)(63, \"mat-radio-group\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function ManagerDashboardComponent_div_1_Template_mat_radio_group_ngModelChange_63_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.chooseOption = $event);\n    });\n    i0.ɵɵtemplate(64, ManagerDashboardComponent_div_1_mat_radio_button_64_Template, 2, 2, \"mat-radio-button\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(65, \"div\", 31);\n    i0.ɵɵlistener(\"click\", function ManagerDashboardComponent_div_1_Template_div_click_65_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.addTab());\n    })(\"click\", function ManagerDashboardComponent_div_1_Template_div_click_65_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.chartToday());\n    });\n    i0.ɵɵtext(66, \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(67, \"div\", 32)(68, \"div\", 33)(69, \"h1\", 34);\n    i0.ɵɵtext(70, \"\\u0E01\\u0E23\\u0E32\\u0E1F\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E22\\u0E2D\\u0E14\\u0E02\\u0E32\\u0E22\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(71, \"canvas\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(72, \"div\", 36)(73, \"div\", 37)(74, \"h1\", 34);\n    i0.ɵɵtext(75, \"\\u0E2A\\u0E34\\u0E19\\u0E04\\u0E49\\u0E32\\u0E02\\u0E32\\u0E22\\u0E14\\u0E35\\u0E1B\\u0E23\\u0E30\\u0E08\\u0E33\\u0E40\\u0E14\\u0E37\\u0E2D\\u0E19\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(76, ManagerDashboardComponent_div_1_div_76_Template, 11, 3, \"div\", 38);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(77, \"div\", 39)(78, \"div\", 40)(79, \"div\", 41)(80, \"div\", 42)(81, \"h1\", 43);\n    i0.ɵɵtext(82);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(83, \"input\", 44);\n    i0.ɵɵlistener(\"ngModelChange\", function ManagerDashboardComponent_div_1_Template_input_ngModelChange_83_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.searchText = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(84, \"div\", 45)(85, \"div\", 25)(86, \"div\", 46)(87, \"div\", 47);\n    i0.ɵɵelement(88, \"canvas\", 48);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(89, \"div\", 46)(90, \"div\", 47)(91, \"mat-tab-group\", 49);\n    i0.ɵɵlistener(\"selectedIndexChange\", function ManagerDashboardComponent_div_1_Template_mat_tab_group_selectedIndexChange_91_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.selected.setValue($event));\n    });\n    i0.ɵɵtemplate(92, ManagerDashboardComponent_div_1_mat_tab_92_Template, 18, 8, \"mat-tab\", 50);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(93, \"div\", 51)(94, \"button\", 52);\n    i0.ɵɵtext(95, \"Close\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.income == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.income != 0);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate(ctx_r1.cost);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate(ctx_r1.income - ctx_r1.cost);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.counterItem, \" \\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\");\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.chooseOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.option);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bestSeller);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.chooseOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.searchText);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"selectedIndex\", ctx_r1.selected.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tabs);\n  }\n}\nconst _c0 = function () {\n  return [];\n};\nexport let ManagerDashboardComponent = /*#__PURE__*/(() => {\n  class ManagerDashboardComponent {\n    constructor(router, fb, callapi) {\n      this.router = router;\n      this.fb = fb;\n      this.callapi = callapi;\n      this.dateRange = new FormGroup({\n        start: new FormControl(),\n        end: new FormControl()\n      });\n      this.option = ['สินค้าที่ขายวันนี้', 'สินค้าที่ขายเดือนนี้', 'ประวัติการขายทั้งหมด'];\n      this.tabs = ['ประวัติการขายทั้งหมด'];\n      this.selected = new FormControl();\n      this.panelOpenState = false;\n      this.income = 0;\n      this.cost = 0;\n      this.result = 0;\n      this.getAllSellByDate = [];\n      this.getAllSellToChooseDate = [];\n      this.getPriceProduct = [];\n      this.getPriceStockStepTwo = [];\n      this.counterItem = 0;\n      this.getProduct = [];\n      this.getIncomePrice = [];\n      this.listItem = [];\n      this.bestSeller = [];\n      this.bestSeller2 = [];\n      this.tableTotalPriceBar = [];\n      this.tableTotalPriceLine = [];\n      this.totalPriceShow = [];\n      this.data = [];\n      this.labelProduct = [];\n      this.nameProduct = [];\n      this.amountProduct = [];\n      this.dataProduct = [];\n      this.labelProductResult = [];\n      this.dataProductResult = [];\n      this.config = {\n        itemsPerPage: 6,\n        currentPage: 0\n      };\n      this.formFindDate = this.fb.group({\n        dateStart: null,\n        dateEnd: null\n      }), this.formFindMonth = this.fb.group({\n        monthStart: null,\n        monthEnd: null\n      }), this.formFindYear = this.fb.group({\n        yearStart: null,\n        yearEnd: null\n      });\n    }\n    onPageChange(event) {\n      this.config.currentPage = event;\n    }\n    onGetAll() {\n      this.nameProduct = [];\n      this.dataProduct = [];\n      this.amountProduct = [];\n      this.callapi.getAllSell().subscribe(i => {\n        this.getAllSell = i;\n        this.getAllSellByDate[0] = i;\n        for (let i = 0; i < this.getAllSell.length; i++) {\n          for (let index = 0; index < this.getAllSell[i].listSellItem.length; index++) {\n            this.listItem.push(this.getAllSell[i].listSellItem[index]);\n          }\n        }\n        for (let i = 0; i < this.getAllSellByDate[0].length; i++) {\n          for (let index = 0; index < this.getAllSellByDate[0][i].listSellItem.length; index++) {\n            let checkId = this.dataProduct.find(sum => sum.productId == this.getAllSellByDate[0][i].listSellItem[index].productId);\n            if (checkId == null) {\n              this.dataProduct.push(this.getAllSellByDate[0][i].listSellItem[index]);\n            } else {\n              for (let j = 0; j < this.dataProduct.length; j++) {\n                if (this.dataProduct[j].productId == this.getAllSellByDate[0][i].listSellItem[index].productId) {\n                  this.dataProduct[j].amount += this.getAllSellByDate[0][i].listSellItem[index].amount;\n                  this.dataProduct[j].totalPrice += this.getAllSellByDate[0][i].listSellItem[index].totalPrice;\n                }\n              }\n            }\n          }\n        }\n        for (let k = 0; k < this.dataProduct.length; k++) {\n          this.nameProduct.push(this.dataProduct[k].productName);\n          this.amountProduct.push(this.dataProduct[k].amount);\n        }\n        this.chartResult();\n        this.productBestSeller();\n      });\n    }\n    productBestSeller() {\n      this.bestSeller = [];\n      let date = new Date();\n      this.formFindMonth.value.monthStart = new Date();\n      this.formFindMonth.value.monthEnd = new Date();\n      this.formFindMonth.value.monthStart.setDate(1);\n      this.formFindMonth.value.monthStart.setHours(0);\n      this.formFindMonth.value.monthStart.setMinutes(0);\n      this.formFindMonth.value.monthStart.setSeconds(0);\n      this.formFindMonth.value.monthEnd.setMonth(date.getMonth() + 1);\n      this.formFindMonth.value.monthEnd.setDate(1);\n      this.formFindMonth.value.monthEnd.setHours(0);\n      this.formFindMonth.value.monthEnd.setMinutes(0);\n      this.formFindMonth.value.monthEnd.setSeconds(0);\n      console.log('--------', this.formFindMonth.value.month);\n      this.callapi.getSellByMonth(this.formFindMonth.value.monthStart.toUTCString(), this.formFindMonth.value.monthEnd.toUTCString()).subscribe(i => {\n        this.getAllSellByMonth = i;\n        for (let i = 0; i < this.getAllSellByMonth.length; i++) {\n          for (let index = 0; index < this.getAllSellByMonth[i].listSellItem.length; index++) {\n            let checkId = this.bestSeller.find(sum => sum.productId == this.getAllSellByMonth[i].listSellItem[index].productId);\n            if (checkId == null) {\n              this.bestSeller.push(this.getAllSellByMonth[i].listSellItem[index]);\n              console.log(this.bestSeller);\n            } else {\n              for (let j = 0; j < this.bestSeller.length; j++) {\n                if (this.bestSeller[j].productId == this.getAllSellByMonth[i].listSellItem[index].productId) {\n                  this.bestSeller[j].amount += this.getAllSellByMonth[i].listSellItem[index].amount;\n                  this.bestSeller.sort((a, b) => b.amount - a.amount);\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n    dailyIncome() {\n      this.formFindDate.value.dateStart = new Date();\n      this.formFindDate.value.dateEnd = new Date();\n      this.formFindDate.value.dateStart.setHours(0);\n      this.formFindDate.value.dateStart.setMinutes(0);\n      this.formFindDate.value.dateStart.setSeconds(1);\n      this.formFindDate.value.dateEnd.setHours(23);\n      this.formFindDate.value.dateEnd.setMinutes(59);\n      this.formFindDate.value.dateEnd.setSeconds(59);\n      if (this.formFindDate != null) {\n        this.callapi.getSellByRangeDate(this.formFindDate.value.dateStart.toUTCString(), this.formFindDate.value.dateEnd.toUTCString()).subscribe(data => {\n          this.getIncomeData = data;\n          for (let i = 0; i < this.getIncomeData.length; i++) {\n            for (let index = 0; index < this.getIncomeData[i].listSellItem.length; index++) {\n              this.getIncomePrice.push(this.getIncomeData[i].listSellItem[index]);\n              this.income += this.getIncomeData[i].listSellItem[index].totalPrice;\n              this.counterItem += 1;\n            }\n          }\n          this.dailyCost();\n        });\n      }\n    }\n    dailyCost() {\n      this.callapi.getAllProduct().subscribe(data => {\n        this.getDataProduct = data;\n        if (this.getDataProduct != undefined) {\n          for (let data = 0; data < this.getDataProduct.length; data++) {\n            for (let index = 0; index < this.getIncomePrice.length; index++) {\n              if (this.getDataProduct[data].productId == this.getIncomePrice[index].productId) {\n                this.cost += this.getDataProduct[data].costAvg * this.getIncomePrice[index].amount;\n              }\n            }\n          }\n        }\n      });\n    }\n    addTab() {\n      this.tabs.fill(this.chooseOption);\n      if (this.chooseOption == 'ประวัติการขายทั้งหมด') {\n        this.statusTab = 0;\n        this.onGetAll();\n        this.selected.setValue(this.tabs.length);\n      } else if (this.chooseOption == 'สินค้าที่ขายวันนี้') {\n        this.statusTab = 1;\n        this.findDate();\n        this.selected.setValue(this.tabs.length);\n      } else if (this.chooseOption == 'สินค้าที่ขายเดือนนี้') {\n        this.statusTab = 2;\n        this.findMonth();\n        this.selected.setValue(this.tabs.length);\n      }\n    }\n    findDatePicker() {\n      if (this.dateRange.value.start != null && this.dateRange.value.end != null) {\n        this.callapi.getSellByRangeDate(this.dateRange.value.start.toUTCString(), this.dateRange.value.end.toUTCString()).subscribe(data => {\n          this.getAllSellByDate[0] = data;\n          console.log(this.getAllSellByDate[0]);\n        });\n      } else if (this.dateRange.value.start != null) {\n        this.callapi.getSellByDate(this.dateRange.value.start.toUTCString()).subscribe(data => {\n          this.getAllSellByDate[0] = data;\n        });\n      }\n    }\n    findDate() {\n      this.nameProduct = [];\n      this.dataProduct = [];\n      this.amountProduct = [];\n      this.formFindDate.value.dateStart = new Date();\n      this.formFindDate.value.dateEnd = new Date();\n      this.formFindDate.value.dateStart.setHours(0);\n      this.formFindDate.value.dateStart.setMinutes(0);\n      this.formFindDate.value.dateStart.setSeconds(1);\n      this.formFindDate.value.dateEnd.setHours(23);\n      this.formFindDate.value.dateEnd.setMinutes(59);\n      this.formFindDate.value.dateEnd.setSeconds(59);\n      if (this.formFindDate != null) {\n        this.callapi.getSellByRangeDate(this.formFindDate.value.dateStart.toUTCString(), this.formFindDate.value.dateEnd.toUTCString()).subscribe(data => {\n          console.log('findDate', this.formFindDate.value);\n          this.getAllSellByDate[1] = data;\n          for (let i = 0; i < this.getAllSellByDate[1].length; i++) {\n            for (let index = 0; index < this.getAllSellByDate[1][i].listSellItem.length; index++) {\n              let checkId = this.dataProduct.find(sum => sum.productId == this.getAllSellByDate[1][i].listSellItem[index].productId);\n              if (checkId == null) {\n                this.dataProduct.push(this.getAllSellByDate[1][i].listSellItem[index]);\n                console.log(this.dataProduct);\n              } else {\n                for (let j = 0; j < this.dataProduct.length; j++) {\n                  if (this.dataProduct[j].productId == this.getAllSellByDate[1][i].listSellItem[index].productId) {\n                    this.dataProduct[j].amount += this.getAllSellByDate[1][i].listSellItem[index].amount;\n                    this.dataProduct[j].totalPrice += this.getAllSellByDate[1][i].listSellItem[index].totalPrice;\n                  }\n                }\n              }\n            }\n          }\n          for (let k = 0; k < this.dataProduct.length; k++) {\n            this.nameProduct.push(this.dataProduct[k].productName);\n            this.amountProduct.push(this.dataProduct[k].amount);\n          }\n        });\n      }\n    }\n    findMonth() {\n      this.nameProduct = [];\n      this.dataProduct = [];\n      this.amountProduct = [];\n      let date = new Date();\n      this.formFindMonth.value.monthStart = new Date();\n      this.formFindMonth.value.monthEnd = new Date();\n      this.formFindMonth.value.monthStart.setDate(1);\n      this.formFindMonth.value.monthStart.setHours(0);\n      this.formFindMonth.value.monthStart.setMinutes(0);\n      this.formFindMonth.value.monthStart.setSeconds(0);\n      this.formFindMonth.value.monthEnd.setMonth(date.getMonth() + 1);\n      this.formFindMonth.value.monthEnd.setDate(1);\n      this.formFindMonth.value.monthEnd.setHours(0);\n      this.formFindMonth.value.monthEnd.setMinutes(0);\n      this.formFindMonth.value.monthEnd.setSeconds(0);\n      console.log('--------', this.formFindMonth.value.month);\n      if (this.formFindMonth != null) {\n        this.callapi.getSellByMonth(this.formFindMonth.value.monthStart.toUTCString(), this.formFindMonth.value.monthEnd.toUTCString()).subscribe(data => {\n          console.log('findMonth', this.formFindMonth.value);\n          this.getAllSellByDate[2] = data;\n          for (let i = 0; i < this.getAllSellByDate[2].length; i++) {\n            for (let index = 0; index < this.getAllSellByDate[2][i].listSellItem.length; index++) {\n              let checkId = this.dataProduct.find(sum => sum.productId == this.getAllSellByDate[2][i].listSellItem[index].productId);\n              if (checkId == null) {\n                this.dataProduct.push(this.getAllSellByDate[2][i].listSellItem[index]);\n              } else {\n                for (let j = 0; j < this.dataProduct.length; j++) {\n                  if (this.dataProduct[j].productId == this.getAllSellByDate[2][i].listSellItem[index].productId) {\n                    this.dataProduct[j].amount += this.getAllSellByDate[2][i].listSellItem[index].amount;\n                    this.dataProduct[j].totalPrice += this.getAllSellByDate[2][i].listSellItem[index].totalPrice;\n                  }\n                }\n              }\n            }\n          }\n          for (let k = 0; k < this.dataProduct.length; k++) {\n            this.nameProduct.push(this.dataProduct[k].productName.substring(0));\n            this.amountProduct.push(this.dataProduct[k].amount);\n          }\n        });\n      }\n    }\n    chartToday() {\n      if (this.myChart != undefined) {\n        this.myChart.destroy();\n      }\n      const ctx = document.getElementById('chartToday');\n      this.myChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: this.nameProduct,\n          datasets: [{\n            label: \"\",\n            data: this.amountProduct,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 2\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n    chartResult() {\n      if (this.myChart2 != undefined) {\n        this.myChart2.destroy();\n      }\n      if (this.nameProduct != [] && this.amountProduct != []) {\n        const ctx2 = document.getElementById('chartResults');\n        this.myChart2 = new Chart(ctx2, {\n          type: 'line',\n          data: {\n            labels: this.nameProduct,\n            datasets: [{\n              label: \"\",\n              data: this.amountProduct,\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 2\n            }]\n          },\n          options: {\n            // animations: {\n            //   tension: {\n            //     duration: 100,\n            //     easing: 'linear',\n            //     from: 1,\n            //     to: 0,\n            //     loop: true\n            //   }\n            // },\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      }\n    }\n    ngOnInit() {\n      this.dailyIncome();\n      this.statusTab = 0;\n      this.onGetAll();\n      this.dataUser = localStorage.getItem('rankuser');\n      if (this.dataUser == 'SELL') {\n        this.router.navigateByUrl('/sell-main');\n      }\n      if (this.dataUser == 'STOCK') {\n        this.router.navigateByUrl('/product-detail');\n      }\n    }\n  }\n  ManagerDashboardComponent.ɵfac = function ManagerDashboardComponent_Factory(t) {\n    return new (t || ManagerDashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.CallApiService));\n  };\n  ManagerDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManagerDashboardComponent,\n    selectors: [[\"app-manager-dashboard\"]],\n    decls: 2,\n    vars: 6,\n    consts: [[\"class\", \"container-fluid\", \"style\", \"vertical-align: middle; margin: auto;\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"container-fluid\", 2, \"vertical-align\", \"middle\", \"margin\", \"auto\"], [1, \"spiner\", 2, \"margin\", \"auto\", \"vertical-align\", \"middle\"], [1, \"container-fluid\", \"bg-top\"], [1, \"title-style\"], [1, \"col\"], [1, \"row\", \"py-4\", \"justify-content-center\"], [1, \"col-lg-2\"], [1, \"card\", \"bg-dash-receive\", \"text-white\", \"mb-4\"], [1, \"card-body\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mr-3\"], [\"class\", \"text-lg font-weight-bold\", \"type\", \"number\", 4, \"ngIf\"], [\"class\", \"text-lg font-weight-bold\", \"style\", \"font-size: 18px;\", \"type\", \"number\", 4, \"ngIf\"], [1, \"material-icons\"], [1, \"card-footer\", \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"text-white\", 2, \"font-size\", \"15px\"], [1, \"card\", \"bg-dash-pay\", \"text-white\", \"mb-4\"], [\"type\", \"number\", 1, \"text-lg\", \"font-weight-bold\", 2, \"font-size\", \"18px\"], [1, \"card\", \"bg-dash-lucre\", \"text-white\", \"mb-4\"], [1, \"text-lg\", \"font-weight-bold\", 2, \"font-size\", \"18px\"], [1, \"text-white-75\", 2, \"font-size\", \"15px\"], [1, \"card\", \"bg-dash-list\", \"text-white\", \"mb-4\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-lg-2\", \"card-shadow\"], [1, \"pt-4\", \"font-opt\", \"text-success\"], [1, \"text-center\"], [\"aria-labelledby\", \"radio-group-label\", 1, \"radio-group\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"radio-button \", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"data-toggle\", \"modal\", \"data-target\", \"#modalToday\", 1, \"btn\", \"btn-info\", \"form-control\", 3, \"click\"], [1, \"col-lg-8\"], [1, \"container-fluid\", \"card-shadow\", \"pt-4\"], [1, \"font-opt\", \"text-success\"], [\"id\", \"chartResults\"], [1, \"col-lg-2\", \"card\", \"card-shadow\"], [1, \"container-fluid\", \"pt-4\"], [\"class\", \"row\", \"style\", \"vertical-align: bottom;\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"modalToday\", \"tabindex\", \"-1\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", \"bottom\", \"modal-size\"], [1, \"modal-dialog\", \"modal-dialog-full-width\"], [1, \"modal-content\", \"modal-content-full-width\"], [1, \"modal-header\", \"modal-header-full-width\", \"modal-header-bg\", \"text-white\"], [\"id\", \"exampleModalLabel \"], [\"placeholder\", \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2A\\u0E34\\u0E19\\u0E04\\u0E49\\u0E32 \", 1, \"form-control\", \"float-right\", 2, \"width\", \"10rem\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-body\"], [1, \"col-md-6\"], [1, \"container\"], [\"id\", \"chartToday\"], [1, \"ml-2\", 3, \"selectedIndex\", \"selectedIndexChange\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\", \"modal-footer-full-width\", \"bg-secondary\"], [\"type\", \"button \", \"data-dismiss\", \"modal \", 1, \"btn\", \"btn-secondary\"], [\"type\", \"number\", 1, \"text-lg\", \"font-weight-bold\"], [1, \"radio-button\", 3, \"value\"], [1, \"row\", 2, \"vertical-align\", \"bottom\"], [1, \"col-9\"], [1, \"float-left\"], [1, \"col-3\"], [1, \"float-right\"], [3, \"label\"], [1, \"table\", \"table-bordered\"], [1, \"text-center\", \"bg-secondary\", 2, \"color\", \"#ffffff\"], [\"scope\", \"col \", 2, \"width\", \"25rem\"], [\"scope\", \"col \", 2, \"width\", \"8rem\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pagination\", \"float-right\"], [\"maxSize\", \"20 \", \"responsiv\", \"true \", \"previousLabel\", \"\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E2B\\u0E19\\u0E49\\u0E32 \", \"nextLabel\", \"\\u0E16\\u0E31\\u0E14\\u0E44\\u0E1B \", 3, \"pageChange\"], [1, \"text-left\"], [1, \"text-right\"]],\n    template: function ManagerDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ManagerDashboardComponent_div_0_Template, 2, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, ManagerDashboardComponent_div_1_Template, 96, 12, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.getDataProduct == undefined || ctx.getIncomeData == undefined || ctx.nameProduct == i0.ɵɵpureFunction0(2, _c0) || ctx.amountProduct == i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getDataProduct != undefined || ctx.getIncomeData != undefined || ctx.nameProduct != i0.ɵɵpureFunction0(4, _c0) || ctx.amountProduct != i0.ɵɵpureFunction0(5, _c0));\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i5.PaginationControlsComponent, i2.NgModel, i6.MatProgressSpinner, i7.MatRadioGroup, i7.MatRadioButton, i8.MatTabGroup, i8.MatTab, i5.PaginatePipe, i9.Ng2SearchPipe],\n    styles: [\".title-style[_ngcontent-%COMP%]{font-size:50px;font-weight:700;padding-top:2rem;padding-left:2rem;color:#d7d7e0}.bg-top[_ngcontent-%COMP%]{background-image:url(https://cdn.pixabay.com/photo/2021/04/07/17/13/sea-6159674_960_720.jpg);background-repeat:no-repeat;background-size:100%}.bg-dash-receive[_ngcontent-%COMP%]{background-color:#5ac6e7}.bg-dash-pay[_ngcontent-%COMP%]{background-color:#e94452}.bg-dash-lucre[_ngcontent-%COMP%]{background-color:#5ecf71}.bg-dash-sumary[_ngcontent-%COMP%]{background-color:#c27af1}.bg-dash-list[_ngcontent-%COMP%]{background-color:#923262}.progress-mp[_ngcontent-%COMP%]{margin-bottom:1rem}.radio-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:15px 0}.radio-button[_ngcontent-%COMP%]{margin:5px}.filter-style[_ngcontent-%COMP%]{margin-left:1rem;padding-left:1rem}.filter-style-item[_ngcontent-%COMP%]{padding-left:1rem}.search-style[_ngcontent-%COMP%]{padding-top:2rem;padding-left:2rem}.card-shadow[_ngcontent-%COMP%]{display:block;flex-direction:column;min-width:0;word-wrap:break-word;background-clip:border-box;border-radius:.35rem;box-shadow:0 0 .9em 1px #cec9c9}.card-dist[_ngcontent-%COMP%]{margin-bottom:1rem;padding:1rem}.card-body[_ngcontent-%COMP%]{flex:1 1 auto;min-height:1px;padding:1.35rem}.card-footer[_ngcontent-%COMP%]{padding:1rem 1.35rem;background-color:#21283208;border-top:1px solid rgba(33,40,50,.125)}.align-items-center[_ngcontent-%COMP%]{align-items:center!important}.justify-content-between[_ngcontent-%COMP%]{justify-content:space-between!important}.d-flex[_ngcontent-%COMP%]{display:flex!important}.modal-dialog-full-width[_ngcontent-%COMP%]{width:50%;height:50%;min-height:60%;min-width:90%;position:relative}.modal-content-full-width[_ngcontent-%COMP%]{border-radius:10px;background-color:#e7e7e7}.modal-header-full-width[_ngcontent-%COMP%]{border-bottom:1px solid #313131}.modal-footer-full-width[_ngcontent-%COMP%]{border-top:1px solid #00b800}.mat-form-field-appearance-outline[_ngcontent-%COMP%]{margin-top:1rem}.modal-header-bg[_ngcontent-%COMP%]{background-color:#313131}.size-progress[_ngcontent-%COMP%]{height:1rem;border-radius:5px}.table-layout[_ngcontent-%COMP%]{width:60px;height:40px}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{vertical-align:middle}.font-opt[_ngcontent-%COMP%]{color:#000;font-size:20px;font-weight:700}\"]\n  });\n  return ManagerDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}